import { IPointCloudTreeNode } from './../types';
import { Box3, Sphere, BufferGeometry } from 'three';
import { OctreeGeometry } from './OctreeGeometry';
export declare class OctreeGeometryNode implements IPointCloudTreeNode {
    name: string;
    octreeGeometry: OctreeGeometry;
    boundingBox: Box3;
    constructor(name: string, octreeGeometry: OctreeGeometry, boundingBox: Box3);
    loaded: boolean;
    loading: boolean;
    parent: OctreeGeometryNode | null;
    geometry: BufferGeometry | null;
    nodeType?: number;
    byteOffset?: bigint;
    byteSize?: bigint;
    hierarchyByteOffset?: bigint;
    hierarchyByteSize?: bigint;
    hasChildren: boolean;
    spacing: number;
    density?: number;
    isLeafNode: boolean;
    readonly isTreeNode: boolean;
    readonly isGeometryNode: boolean;
    readonly children: ReadonlyArray<OctreeGeometryNode | null>;
    static IDCount: number;
    id: number;
    index: number;
    boundingSphere: Sphere;
    numPoints: number;
    level: number;
    oneTimeDisposeHandlers: Function[];
    getLevel(): number;
    isLoaded(): boolean;
    getBoundingSphere(): Sphere;
    getBoundingBox(): Box3;
    load(): void;
    getNumPoints(): number;
    dispose(): void;
    traverse(cb: (node: OctreeGeometryNode) => void, includeSelf?: boolean): void;
}
